// code for bubble sort
for (int i = 0; i < array.Length - 1; i++)
            {
                sorted = true;

                for (int j = 0; j < array.Length - i - 1; j++)
                {
                    if (sorter.Compare(array[j], array[j + 1]) > 0)
                    {
                       // code for swap function
                    }
                }

// code for insertion sort

            for (int i = 0; i < array.Length; i++)
            {
                int j = i;
                while ((j > 0) && (sorter.Compare(array[j - 1], array[j]) > 0))
                {
                    // code for swap function
                    j -= 1;
                }
            }
// code for selection sort

            for (int i = 0; i < array.Length; i++)
            {
                K minElement = array[i];
                int minLocation = i;

                for (int j = i + 1; j < array.Length; j++)
                {
                    if (sorter.Compare(array[j], minElement) < 0)
                    {
                        minElement = array[j];
                        minLocation = j;
                    }
                }

                if (minLocation != i)
                {
                      // code for swap function

                }
// code for quick sort

                int i = lb;

                for (int j = lb + 1; j <= hb; j++)
                {
                    if (comparer.Compare(arr[j], pivot) < 0)
                    {
                        i++;
                        Swap(ref arr[i], ref arr[j]);
                    }
                }

                Swap(ref arr[i], ref arr[lb]);  // Move pivot to its correct position
                return i;
